<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kenny.section01.xml.DynamicSqlMapper">

    <select id="selectMenuByPrice" resultType="com.kenny.common.MenuDTO">
        SELECT
                menu_code
              , menu_name
              , menu_price
              , category_code
              , orderable_status
          FROM tbl_menu
         WHERE orderable_status = 'Y'
        <!--
        if : test 속성의 조건에 해당할 때만 엘리먼트 구문을 쿼리에 포함시킨다.
        gt: 크다, lt: 작다, gte: 크거나 같다, lte: 작거나 같다
        -->
        <if test="price gte 0 and price lte 10000">
            <!-- XML 파일에서 '<' (작다) 기호를 태그로 인식하기 때문에 escaping 필요 -->
            <![CDATA[
            AND menu_price < #{ price }
            ]]>
        </if>
        <if test="price gt 10000 and price lte 20000">
            AND menu_price BETWEEN 10000 AND #{ price }
        </if>
        <if test="price gt 20000 and price lte 30000">
            AND menu_price BETWEEN 20000 AND #{ price }
        </if>
        <if test="price gt 30000">
            AND menu_price BETWEEN 30000 AND #{ price }
        </if>
        ORDER BY menu_code
    </select>
    <!-- price가 어떤 값이 넘어왔느냐에 따라 쿼리가 달라짐 -->

    <select id="searchMenu" resultType="com.kenny.common.MenuDTO">
        SELECT
              menu_code
              , menu_name
              , menu_price
              , category_code
              , orderable_status
         FROM tbl_menu
        <if test="condition == 'category'">
            JOIN tbl_category USING (category_code)
        </if>
        WHERE orderable_status = 'Y'
        <if test="condition == 'name'">
            AND menu_name LIKE CONCAT('%', #{ value }, '%')
        </if>
        <if test="condition == 'category'">
            AND category_name = #{ value }
        </if>
        ORDER BY menu_code
    </select>
    <!--
        입력값이 name 마늘 이면 if 2번만
        '%마늘%' 이렇게 문자열이 들어가야 하는데 concat으로 합쳐준 것
    -->

    <select id="searchMenuBySupCategory" resultType="com.kenny.common.MenuDTO">
        SELECT
                menu_code
              , menu_name
              , menu_price
              , category_code
              , orderable_status
          FROM tbl_menu
         WHERE orderable_status = 'Y'
        <!-- choose(when, otherwise) : Java의 if, else-if 문 또는 switch-case 문과 같은 역할을 한다. -->
        <choose>
            <when test="value == '식사'">
                AND category_code IN (4, 5, 6, 7)
            </when>
            <when test="value == '음료'">
                AND category_code IN (8, 9, 10)
            </when>
            <otherwise>
                AND category_code IN (11, 12)
            </otherwise>
        </choose>
        ORDER BY menu_code
    </select>

    <select id="searchMenuByRandomMenuCode" resultType="com.kenny.common.MenuDTO">
        SELECT
                menu_code
              , menu_name
              , menu_price
              , category_code
              , orderable_status
          FROM tbl_menu
         WHERE menu_code IN
        <!--
            collection : 반복을 수행할 대상 <- Set<Integer>를 꺼내서 쓰겠다
            item : 반복을 수행할 때마다 꺼내올 값의 이름 설정
            open : 반복문 구문의 가장 앞에 올 문자
            separator : 반복이 수행될 때 꺼내온 item 사이에 들어갈 문자
            close : 반복문 구문의 가장 마지막에 올 문자
           => (1, 5, 7, 11, 15) 이렇게 뽑기 위함
        -->
        <foreach collection="randomMenuCodeList" item="menuCode" open="(" separator="," close=")">
            #{ menuCode }
        </foreach>
    </select>

    <select id="searchMenuByNameOrCategory" resultType="com.kenny.common.MenuDTO">
        SELECT
                menu_code
              , menu_name
              , menu_price
              , category_code
              , orderable_status
          FROM tbl_menu

        <!-- 문제 상황 발생 (4가지 경우 모두 커버 불가) -->
<!--        <if test="nameValue != null">-->
<!--            WHERE menu_name LIKE CONCAT('%', #{ nameValue }, '%')-->
<!--        </if>-->
<!--        <if test="categoryValue != null">-->
<!--            AND category_code = #{ categoryValue }-->
<!--        </if>-->
        <!--
            해결 방법 1. where 태그 사용
            (1) 구문이 where로 시작하지 않으면 자동으로 where를 붙여준다.
            (2) 태그 내부에 쿼리문이 추가되지 않으면 where을 작성하지 않는다.
            (3) 구문이 AND나 OR로 시작하면 자동으로 해당 단어를 제거한다.
        -->
<!--        <where>-->
<!--            <if test="nameValue != null">-->
<!--                menu_name LIKE CONCAT('%', #{ nameValue }, '%')-->
<!--            </if>-->
<!--            <if test="categoryValue != null">-->
<!--                AND category_code = #{ categoryValue }-->
<!--            </if>-->
<!--        </where>-->
        <!--
            해결방법 2. trim 태그 이용
            (1) prefix : 처리 후 엘리먼트의 내용이 있으면 붙여주는 접두사
            (2) prefixOverrides : 처리 후 엘리먼트의 내용 중 가장 앞에 해당하는 문자를 자동 삭제
            (3) suffix : 처리 후 엘리먼트의 내용이 있으면 붙여주는 접미사
            (4) suffixOverrides : 처리 후 엘리먼트의 내용 중 가장 뒤에 해당하는 문자를 자동 삭제
         -->
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="nameValue != null">
                menu_name LIKE CONCAT('%', #{ nameValue }, '%')
            </if>
            <if test="categoryValue != null">
                AND category_code = #{ categoryValue }
            </if>
        </trim>
    </select>

    <update id = "updateMenu">

        UPDATE
                tbl_menu
        <!-- 문제 상황 발생 set 이나 , 가 남아서 sql 오류를 일으킴 -->
<!--           SET-->
<!--        <if test="menuName != null and menuName != ''">-->
<!--            menu_name = #{ menuName },-->
<!--        </if>-->
<!--        <if test="categoryCode != null and categoryCode gt 0">-->
<!--            categoryCode = #{ categoryCode },-->
<!--        </if>-->
<!--        <if test="orderableStatus != null and orderabeStatus != ''">-->
<!--            orderable_status = #{ orderableStatus }-->
<!--        </if>-->
        <!--
            해결 방법 1. set 태그 사용
            (1) SET 구문 작성
            (2) 앞 또는 뒤에 붙는 , 제거
        -->
<!--        <set>
            <if test="menuName != null and menuName != ''">
                menu_name = #{ menuName },
            </if>
            <if test="categoryCode != null and categoryCode gt 0">
                category_code = #{ categoryCode },
            </if>
            <if test="orderableStatus != null and orderableStatus != ''">
                orderable_status = #{ orderableStatus }
            </if>
        </set>-->

        <!-- 해결 방법 2. trim 태그 사용 -->
        <trim prefix="SET" suffixOverrides=",">
            <if test="menuName != null and menuName != ''">
                menu_name = #{ menuName },
            </if>
            <if test="categoryCode != null and categoryCode gt 0">
                category_code = #{ categoryCode },
            </if>
            <if test="orderableStatus != null and orderableStatus != ''">
                orderable_status = #{ orderableStatus }
            </if>
        </trim>
        WHERE menu_code = # { menuCode }
    </update>


</mapper>